# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    profiles:
        active: dev
        include: swagger
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: true # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        type: com.zaxxer.hikari.HikariDataSource #云开发数据
        url: jdbc:mysql://112.33.13.149:3306/albedo?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
        name:
        username: albedo
        password: Song_1988
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-seconds: 1
    mvc:
#        view:
#            prefix: /WEB-INF/views/
#            suffix: .jsp
        favicon:
            enabled: false
#    redis:
#       host: localhost
#       port: 6379
    web:
        root:
            prefix: albedo-boot-ui-angular/target/www/app/
#rabbitmq 配置
    rabbitmq:
        username: admin
        password: 112233
        host: 127.0.0.1
        port: 5672
        listener:
            simple:
                prefetch: 1 #在单个请求中处理的消息个数
                concurrency: 1 #最小消费者数量
                max-concurrency: 5 #最大消费者数量
                acknowledge-mode: manual #手动确认



server:
    port: 8066
#    jsp-servlet:
#        class-name: org.apache.jasper.servlet.JspServlet

# ===================================================================
# Albedo specific properties
# ===================================================================

albedo:
    jedisKeyPrefix: albedoBootWebApp
    developMode: true
    isTokenInterceptor: false
    freeURL:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
        ehcache:
            timeToLiveSeconds: 3600
            maxBytesLocalHeap: 16M
    security:
        authentication:
            jwt:
                secret: albedo-boot-token
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific Albedo mail property, for standard properties see MailProperties
        from: albedoBootWebApp@localhost
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite: # Use the "graphite" Maven profile to have the Graphite dependencies
            enabled: false
            host: localhost
            port: 2003
            prefix: albedoBootCloudGateway
        prometheus: # Use the "prometheus" Maven profile to have the Prometheus dependencies
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
        spectator-metrics: # Reports Spectator Circuit Breaker metrics in the logs
            enabled: false
            # edit spring.metrics.export.delay-millis to set report frequency

